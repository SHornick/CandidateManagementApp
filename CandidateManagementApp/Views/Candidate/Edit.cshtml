@model CandidateManagementApp.Models.Candidate

@{
    ViewData["Title"] = "Edit";
}


<h4>Candidate Information</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EmailAddress" class="control-label"></label>
                <input asp-for="EmailAddress" class="form-control" />
                <span asp-validation-for="EmailAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ZipCode" class="control-label"></label>
                <input asp-for="ZipCode" class="form-control" />
                <span asp-validation-for="ZipCode" class="text-danger"></span>
            </div>
            <h3>Qualifications</h3>
            @if (Model.Qualifications != null && Model.Qualifications.Count > 0)
            {
                @for (int i = 0; i < Model.Qualifications.Count; i++)
                {
                    <!-- Renders the new fields for adding a qualification -->
                    await Html.RenderPartialAsync("QualificationView", Model.Qualifications[i]);
                }
                <div id="newQualification"></div>
                <button id="addQualification" type="button" class="btn btn-dark">Add a qualification</button>
            }
            else
            {
                <div id="newQualification"></div>
                <input id="addQualification" type="button" value="Add a Qualification" class="btn btn-dark" />
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-dark" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <!-- Ajax script for adding a new qualfiication -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript">
            $('#addQualification').on('click', function () {
                $.ajax({
                    url: '/Candidate/QualificationView'
                }).done(function (partialView) {
                    $('#newQualification').append(partialView);
                });
            });

    </script>

}